name: PR

on:
  pull_request:

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      cli: ${{ steps.filter.outputs.cli }}
      web: ${{ steps.filter.outputs.web }}
      env-aws-bootstrap: ${{ steps.filter.outputs.env-aws-bootstrap }}
      env-aws-dev: ${{ steps.filter.outputs.env-aws-dev }}
      env-aws-stage: ${{ steps.filter.outputs.env-aws-stage }}
      env-aws-prod: ${{ steps.filter.outputs.env-aws-prod }}
      env-local: ${{ steps.filter.outputs.env-local }}
      tf-infra: ${{ steps.filter.outputs.tf-infra }}
      release: ${{ steps.filter.outputs.release }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Filters
        uses: dorny/paths-filter@v3
        id: filter
        with:
          # checks difference compared to branch we push into
          # otherwise it would use master
          base: ${{ github.ref }}
          filters : |
            cli:
              - 'build/ci/docker/cli.Dockerfile'
              - 'cmd/cli/**'
              - 'pkg/**'
            web:
              - 'build/ci/docker/web.Dockerfile'
              - 'cmd/web/**'
              - 'pkg/**'
            env-aws-bootstrap:
              - 'environments/bootstrap/aws/**'
            env-aws-dev:
              - 'environments/aws/dev/**'
              - 'modules/aws/infra/**'
            env-aws-stage:
              - 'environments/aws/stage/**'
              - 'modules/aws/infra/**'
            env-aws-prod:
              - 'environments/aws/prod/**'
              - 'modules/aws/infra/**'
            env-local:
              - 'environments/local/**'
            tf-infra:
              - 'modules/aws/infra/**'
            release:
              - '*'
          
  unit-test:
    runs-on: ubuntu-latest
    needs: filter
    if: |
      (needs.filter.outputs.cli == 'true' || needs.filter.outputs.web == 'true')
    steps:
      - uses: actions/checkout@v4
      - name: Run Unit Tests
        run: |
          for mod in ./pkg/*/; do
            if [ -f "$mod/go.mod" ]; then
              echo "Testing $mod"
              go test "$mod/..."
            fi
          done

  cli-test:
    runs-on: ubuntu-latest
    needs: unit-test
    if: needs.filter.outputs.cli == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Run CLI Tests
        run: |
          echo "Running cli tests..."
          go test ./cmd/cli/...

  web-test:
    runs-on: ubuntu-latest
    needs: unit-test
    if: needs.filter.outputs.web == 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Run Web Tests
        run : |
          echo "Running web tests..."
          go test ./cmd/web/...