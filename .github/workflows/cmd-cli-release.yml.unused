name: CMD cli - Push to release branches

on:
  push:
    branches:
      - dev
      - stage
      - master
    paths:
      - '.github/workflows/cmd-cli-release.yml'
      - 'build/ci/docker/cli.Dockerfile'
      - 'cmd/cli/**'
      - '/pkg/**'

permissions:
  contents: write

jobs:
  bump_version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install SemVer
        run: |
          npm install -g semver

      - name: Bump version
        id: bump
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ./cmd/cli
        run: |
          # Setup git

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:$GITHUB_TOKEN@github.com/${{ github.repository }}.git

          # Read current version

          CURR_VER=$(cat VERSION 2>/dev/null || echo "0.0.0")
          echo "Current version: $CURR_VER"

          # Determine next version
          
          if [[ "${GITHUB_REF}" == "refs/heads/dev" ]]; then
            NEXT_VER=$(semver "$CURR_VER" -i prerelease --preid rc)
          elif [[ "${GITHUB_REF}" == "refs/heads/stage" ]]; then
            NEXT_VER=$(semver "$CURR_VER" -i prerelease --preid rc)
          else
            NEXT_VER=$(semver "$CURR_VER" -i patch)
          fi
          echo "Next version: $NEXT_VER"

          # Update VERSION file
          
          echo "$NEXT_VER" > VERSION

          if [ "$NEXT_VER" != "$CURR_VER"]; then
            # Commit and tag
            git add VERSION
            git commit -m "chore: bump version to $NEXT_VER"
            git tag "v$NEXT_VER"

            # Push commit and tag
            BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}"
            git push origin HEAD:"$BRANCH_NAME" --tags

            echo "version=$NEXT_VER" >> $GITHUB_OUTPUT
            echo "bumped=true" >> $GITHUB_OUTPUT
          else
            echo "version=$CUR_VER" >> $GITHUB_OUTPUT
            echo "bumped=false" >> $GITHUB_OUTPUT
          fi

  build:
    runs-on: ubuntu-latest
    needs: bump_version
    if: needs.bump_version.output.bumped == 'true'

    permissions:
      actions: write
      contents: read

    env:
      NEXT_VER: ${{ needs.bump_version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up branch name variable
        id: vars
        run: |
          # Strip refs/heads/ prefix and replace slashes with dashes
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}" | tr '/' '-')
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

          TIMESTAMP=$(date +%s)
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

      - name: Build Docker images
        run: |
          docker build -f build/ci/docker/cli.Dockerfile -t jsafar/advent2024.cli:${NEXT_VER} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push Docker images
        run: |
          docker tag jsafar/advent2024.cli:${NEXT_VER} jsafar/advent2024.cli:${BRANCH_NAME}
          
          docker push jsafar/advent2024.cli:${BRANCH_NAME}
          docker push jsafar/advent2024.cli:${NEXT_VER}

      - name: Push Docker images - master
        if: github.ref == 'refs/heads/master'
        run: |
          docker tag jsafar/advent2024.cli:${NEXT_VER} jsafar/advent2024.cli:latest

          docker push jsafar/advent2024.cli:latest